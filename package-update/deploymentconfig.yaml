apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: thoth
    component: package-update-consumer
  name: package-update-consumer
spec:
  replicas: 1
  revisionHistoryLimit: 4
  selector:
    service: package-update-consumer
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: package-update-consumer
    spec:
      containers:
        - env:
            - name: THOTH_USE_ARGO
              value: "1"
            - name: SUBCOMMAND
              value: consumer
            - name: KUBERNETES_API_URL
              value: https://kubernetes.default.svc.cluster.local
            - name: KUBERNETES_VERIFY_TLS
              value: "0"
            - name: THOTH_HOST
              value: khemenu.thoth-station.ninja
            - name: THOTH_MIDDLETIER_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: middletier-namespace
                  name: thoth
            - name: THOTH_INFRA_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  key: infra-namespace
                  name: thoth
            - name: THOTH_DEPLOYMENT_NAME
              valueFrom:
                configMapKeyRef:
                  key: storage-bucket-name
                  name: thoth
            - name: THOTH_S3_ENDPOINT_URL
              valueFrom:
                configMapKeyRef:
                  key: ceph-host
                  name: thoth
            - name: THOTH_CEPH_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: ceph-bucket-name
                  name: thoth
            - name: THOTH_CEPH_BUCKET_PREFIX
              valueFrom:
                configMapKeyRef:
                  key: ceph-bucket-prefix
                  name: thoth
            - name: KNOWLEDGE_GRAPH_HOST
              valueFrom:
                configMapKeyRef:
                  key: postgresql-host
                  name: thoth
            - name: KNOWLEDGE_GRAPH_PORT
              value: "5432"
            - name: KNOWLEDGE_GRAPH_SSL_DISABLED
              value: "1"
            - name: KNOWLEDGE_GRAPH_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: postgresql
            - name: KNOWLEDGE_GRAPH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: postgresql
            - name: KNOWLEDGE_GRAPH_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: postgresql
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  key: kafka-bootstrap-servers
                  name: thoth
            - name: KAFKA_CAFILE
              value: /mnt/secrets/kafka_ca.crt
            - name: KAFKA_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: kafka-client-id
                  name: thoth
            - name: KAFKA_SSL_AUTH
              valueFrom:
                configMapKeyRef:
                  key: kafka-ssl-auth
                  name: thoth
            - name: KAFKA_RETENTION_TIME_SECONDS
              valueFrom:
                configMapKeyRef:
                  key: kafka-topic-retention-time
                  name: thoth
          imagePullPolicy: Always
          name: package-update-consumer
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: "1"
              memory: 256Mi
          volumeMounts:
            - mountPath: /mnt/secrets
              name: secrets
              readOnly: true
      securityContext: {}
      volumes:
        - name: secrets
          secret:
            defaultMode: 420
            items:
              - key: kafka_ca.crt
                path: kafka_ca.crt
            secretName: kafka
  test: false
