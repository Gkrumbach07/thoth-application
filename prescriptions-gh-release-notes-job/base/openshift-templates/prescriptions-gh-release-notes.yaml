apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: prescriptions-gh-release-notes
  labels:
    app: prescriptions-gh-release-notes
    component: prescriptions-gh-release-notes
spec:
  serviceAccountName: argo
  activeDeadlineSeconds: 3000
  ttlStrategy:
    secondsAfterCompletion: 7200
    secondsAfterSuccess: 7200
    secondsAfterFailure: 7200
  entrypoint: prescriptions-gh-release-notes
  schedule: "@weekly"
  concurrencyPolicy: "Forbid"
  startingDeadlineSeconds: null
  workflowSpec:
    volumes:
      - name: workdir
        emptyDir: {}
    entrypoint: entry
    templates:
    - name: entry
      steps:
      - - name: get-cm-ceph
          template: get-cm-ceph

        - name: get-cm-deployment-name
          template: get-cm-deployment-name

      - - name: prescriptions-gh-release-notes
          template: prescriptions-gh-release-notes
          arguments:
            parameters:
              - name: bucket-name
                value: "{{steps.get-cm-ceph.outputs.parameters.bucket-name}}"
              - name: bucket-prefix
                value: "{{steps.get-cm-ceph.outputs.parameters.bucket-prefix}}"
              - name: deployment-name
                value: "{{steps.get-cm-deployment-name.outputs.parameters.deployment-name}}"
              - name: s3-endpoint-url
                value: "{{steps.get-cm-ceph.outputs.parameters.s3-endpoint-url}}"

    - name: get-cm-ceph
      serviceAccountName: argo
      resource:
        action: get
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: ceph
      outputs:
        parameters:
          - name: bucket-name
            valueFrom:
              jsonPath: '{.data.bucket-name}'
          - name: bucket-prefix
            valueFrom:
              jsonPath: '{.data.bucket-prefix}'
          - name: s3-endpoint-url
            valueFrom:
              jsonPath: '{.data.endpoint}'

    - name: get-cm-deployment-name
      serviceAccountName: argo
      resource:
        action: get
        manifest: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: thoth
      outputs:
        parameters:
          - name: deployment-name
            valueFrom:
              jsonPath: '{.data.deployment-name}'

    - name: prescriptions-gh-release-notes
      serviceAccountName: argo
      inputs:
        parameters:
          - name: bucket-name
          - name: bucket-prefix
          - name: deployment-name
          - name: s3-endpoint-url
      container:
        image: quay.io/thoth-station/prescriptions-gh-release-notes-job:v0.0.2
        env:
          - name: THOTH_LOGGING_NO_JSON
            value: "1"
          - name: THOTH_PRESCRIPTIONS_GH_RELEASE_NOTES_DEBUG
            value: "0"
          - name: THOHT_PRESCRIPTIONS_GH_RELEASE_NOTES_START_DATE
          - name: THOHT_PRESCRIPTIONS_GH_RELEASE_NOTES_END_DATE
          - name: THOHT_PRESCRIPTIONS_GH_RELEASE_NOTES_OUTPUT
            value: "/mnt/workdir/prescriptions_gh_release_notes.yaml"
          - name: THOTH_DEPLOYMENT_NAME
            valueFrom:
              configMapKeyRef:
                key: deployment-name
                name: thoth
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: thoth
                key: sentry-dsn
          - name: THOTH_S3_ENDPOINT_URL
            valueFrom:
              configMapKeyRef:
                key: host
                name: ceph
          - name: THOTH_CEPH_BUCKET
            valueFrom:
              configMapKeyRef:
                key: bucket-name
                name: ceph
          - name: THOTH_CEPH_BUCKET_PREFIX
            valueFrom:
              configMapKeyRef:
                key: bucket-prefix
                name: ceph
          - name: THOTH_CEPH_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ceph
                key: key-id
          - name: THOTH_CEPH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: ceph
                key: secret-key
        outputs:
          artifacts:
            - name: outputdocument
              path: "/mnt/workdir/prescriptions_gh_release_notes.yaml"
              archive:
                none: {}
              s3:
                key: "{{inputs.parameters.bucket-prefix}}/\
                  {{inputs.parameters.deployment-name}}/\
                  prescriptions_gh_release_notes.yaml"
                endpoint: "{{inputs.parameters.s3-endpoint-url}}"
                bucket: "{{inputs.parameters.bucket-name}}"
                insecure: true
                accessKeySecret:
                  name: argo-artifact-repository-secrets
                  key: accessKey
                secretKeySecret:
                  name: argo-artifact-repository-secrets
                  key: secretKey
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workdir
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
